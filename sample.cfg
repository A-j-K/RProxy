server {
	addr    = 127.0.0.1
	port    = 7070
	backlog = 1024
	threads = 4

	read-timeout    = { 30, 0 }
	write-timeout   = { 0, 0 }
	pending-timeout = { 2, 0 }
	max-pending     = 200

	ssl {
		enabled           = false
		protocols-on      = { TLSv1 }
		protocols-off     = { SSLv2, SSLv3 }
		cert              = ./server.crt
		key               = ./server.key
		ciphers           = "eNULL:RC4-SHA"
		verify-peer       = false
		cache-enabled     = false
	}

	downstream ds_01 {
		enabled        = true
		addr           = 127.0.0.1
		port           = 8081
		connections    = 10
		high-watermark = 0
		read-timeout   = { 0, 0 }
		write-timeout  = { 0, 0 }
		retry          = { 0, 50000 }
	}

	downstream ds_02 {
		enabled        = true
		addr           = 127.0.0.1
		port           = 8082
		connections    = 10
	}

	downstream ds_03 {
		enabled        = true
		addr           = 127.0.0.1
		port           = 8083
		connections    = 10
	}

	downstream ds_04 {
		enabled     = true
		addr        = 127.0.0.1
		port        = 80
		connections = 10
	}

	if-uri-match "/ugh" {
		downstreams            = { ds_04 }

		# set rule-specific connection read/write timeout to infinity
		upstream-read-timeout  = { 0, 0 }
		upstream-write-timeout = { 0, 0 }
	}

	if-uri-match "/poll" {
		downstreams     = { ds_01, ds_02 }
		lb-method       = roundrobin

		upstream-read-timeout  = { 10, 0 }

		headers {
			x-forwarded-for   = true
			x-ssl-certificate = false
		}
	}

	if-uri-rmatch "^/things/(.*)" {
		downstreams = { ds_03 }
	}

	if-uri-gmatch "/stuff/*" {
		downstreams = { ds_01, ds_02, ds_03 }
		lb-method   = roundrobin
	}

	if-uri-match "/derp" {
		downstreams = { ds_01 }
		upstream-read-timeout = { 0, 0 }
	}

	logging {
		request {
			output = "syslog:local0"
			format = "{SRC} {HOST} {URI}"
		}

		error {
			output = "file:/dev/stderr"
			format = "{SRC} {HOST} {URI}"
			level  = 7
		}
	}
}
